package phaser.input;
import js.html.CanvasElement;
import js.html.CanvasRenderingContext2D;
import phaser.core.Game;
import phaser.core.LinkedList.LinkedList;
import phaser.core.Signal;
import phaser.geom.Circle;
import phaser.geom.Point;

@:native("Phaser.Input")
@:publicFields
extern class Input {
	function new(game:Game);
	var game:Game;
	var hitCanvas:CanvasElement;
	var hitContext:CanvasRenderingContext2D;
	var moveCallback:Dynamic;
	var moveCallbackContext:Dynamic;
	static var MOUSE_OVERRIDES_TOUCH(default, null):Int;
	static var TOUCH_OVERRIDES_MOUSE(default, null):Int;
	static var MOUSE_TOUCH_COMBINE(default, null):Int;
	var pollRate:Int;
	var disabled:Bool;
	var multiInputOverride:Int;
	var position:Point;
	var speed:Point;
	var circle:Circle;
	var scale:Point;
	var maxPointers:Int;
	var currentPointers:Int;
	var tapRate:Int;
	var doubleTapRate:Int;
	var holdRate:Int;
	var justPressedRate:Int;
	var justReleasedRate:Int;
	var recordPointerHistory:Bool;
	var recordRate:Int;
	var recordLimit:Int;
	var pointer1:Pointer;
	var pointer2:Pointer;
	var pointer3:Pointer;
	var pointer4:Pointer;
	var pointer5:Pointer;
	var pointer6:Pointer;
	var pointer7:Pointer;
	var pointer8:Pointer;
	var pointer9:Pointer;
	var pointer10:Pointer;
	var activePointer:Pointer;
	var mousePointer:Pointer;
	var mouse:Mouse;
	var keyboard:Keyboard;
	var touch:Touch;
	var mspointer:MSPointer;
	var gamepad:Gamepad;
	var onDown:Signal;
	var onUp:Signal;
	var onTap:Signal;
	var onHold:Signal;
	var interactiveItems:LinkedList;
	function destroy():Void;
	function setMoveCallback(callback:Dynamic, callbackContext:Dynamic):Void;
	function addPointer():Pointer;
	function reset(?hard:Bool):Void;
	function resetSpeed(x:Float, y:Float):Void;
	function startPointer(event:Dynamic):Pointer;
	function updatePointer(event:Dynamic):Pointer;
	function stopPointer(event:Dynamic):Pointer;
	function getPointer(?state:Bool):Pointer;
	function getPointerFromIdentifier(identifier:Int):Pointer;
	var x(default, default):Float;
	var y(default, default):Float;
	var pollLocked(default, null):Bool;
	var totalInactivePointers(default, null):Int;
	var totalActivePointers(default, null):Int;
	var worldX(default, null):Float;
	var worldY(default, null):Float;
	
	private var _pollCounter:Int;
	private var _oldPosition:Point;
	private var _x:Float;
	private var _y:Float;
	private function boot():Void;
	private function update():Void;
}